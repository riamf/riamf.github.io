<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learning Notes</title>
    <link>https://riamf.github.io/</link>
    <description>Recent content on Learning Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 15 Jan 2019 18:20:49 +0100</lastBuildDate>
    
	<atom:link href="https://riamf.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Books of 2018</title>
      <link>https://riamf.github.io/posts/books_of_2018/</link>
      <pubDate>Tue, 15 Jan 2019 18:20:49 +0100</pubDate>
      
      <guid>https://riamf.github.io/posts/books_of_2018/</guid>
      <description>Books of 2018 Recently I find myself reading a lot more technical books, actually in 2018 I read only technical books due to a lot of context switching between different projects. Books helped me to quickly accommodate in new technical stack. I believe they are amazing source of knowledge. Here I want to recommend some of the books I read with brief description:
Compilers: Principles, Techniques, and Tools (2nd Edition) link</description>
    </item>
    
    <item>
      <title>Vapor template app</title>
      <link>https://riamf.github.io/posts/vapor_template_app/</link>
      <pubDate>Thu, 25 Oct 2018 20:53:37 +0200</pubDate>
      
      <guid>https://riamf.github.io/posts/vapor_template_app/</guid>
      <description>Vapor A long time ago in a galaxy far, far away&amp;hellip;I used Kitura to try out Swift on server. Simultaneously other frameworks were developed like Perfect and Vapor. At That time it was mostly alpha/beta versions or work in progress, it wasn&amp;rsquo;t as pleasurable as using Swift on machines with Apple sign.
Recently I decided to go back to that idea and Vapor is what I choose to test. So what is Vapor and from where did it came.</description>
    </item>
    
    <item>
      <title>Grafana in docker setup</title>
      <link>https://riamf.github.io/posts/dockerized_grafana_setup/</link>
      <pubDate>Thu, 06 Sep 2018 11:54:05 +0200</pubDate>
      
      <guid>https://riamf.github.io/posts/dockerized_grafana_setup/</guid>
      <description>Grafana Grafana is a tool that lets you visualize metrics. It handles a lot of different data sources and is very flexible. It does not require you to be an it expert to setup and with just few easy steps you can connect to your database or service and present live metric that can help you more deeply understand how your system is used. With a system of alerts it tell you about bottlenecks that you might not know of, like moments in time when your system is overloaded and you database is dying.</description>
    </item>
    
    <item>
      <title>Estimates of variability</title>
      <link>https://riamf.github.io/posts/estimates_of_variability/</link>
      <pubDate>Sat, 18 Aug 2018 16:08:06 +0200</pubDate>
      
      <guid>https://riamf.github.io/posts/estimates_of_variability/</guid>
      <description>Deviations The most widely used estimates are based on differences in data, deviations, like observation and given estimate of location. Take for example this set {1,2,3}. Mean equals 2 and deviations are:
1. 2 - 1 = 1 2. 2 - 2 = 0 3. 2 - 3 = -1  This deviations tell us how dispersed observations are around the central value. What is also interesting is that the sum od deviations from the mean value equals 0.</description>
    </item>
    
    <item>
      <title>Metrics and estimates</title>
      <link>https://riamf.github.io/posts/metrics_and_estimates/</link>
      <pubDate>Tue, 31 Jul 2018 18:47:18 +0200</pubDate>
      
      <guid>https://riamf.github.io/posts/metrics_and_estimates/</guid>
      <description>Mean Most basic estimate for location. As simple as possible it is just and average value from a list of values described with equation:
$$ \frac{\sum\limits_{i=1}^n x_i}{n} $$
Trimmed Mean It is a small variation of mean. Fist Values are sorted, then some number of values are dropped from collection beginning and end. After that normal average value is computed. It is Very useful when we want to eliminate the influence of extreme values in data set.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://riamf.github.io/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://riamf.github.io/about/</guid>
      <description>Here is my site where I keep my notes projects and blogs.
Thanks for reading!</description>
    </item>
    
  </channel>
</rss>